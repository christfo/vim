
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'Morantron/tmux-fingers'


run '~/.tmux/plugins/tpm/tpm'

unbind C-b
set -g prefix C-a
bind a send-prefix
set -g base-index 1
setw -g pane-base-index 1
set -g status-right '#{prefix_highlight} | %a %Y-%m-%d %H:%M'
# source "/home/chrisf/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"

# screen-like
bind ^C new-window
bind ^D detach-client
# bind ^N next-window
# bind ^P previous-window
#bind ^K confirm-before -p "kill-window #S? (y/n)" kill-window
bind ^O last-window
# rotate 
bind -r ^R rotate-window -D

unbind %
bind | split-window -h
bind _ split-window -v
# use "v" and "s" to do vertical/horizontal splits, like vim
bind s split-window -v
bind v split-window -h

# navigation
bind-key  C-a last-window 
bind-key -r C-n next-window 
bind-key -r C-p previous-window 

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Automatically set window title
setw -g automatic-rename


# use the vim motion keys to move between panes
# bind  C-h select-pane -L
# bind  C-j select-pane -D
# bind  C-k select-pane -U
# bind  C-l select-pane -R

# bind -n C-k run-shell 'tmuxswitch.sh -U'
# bind -n C-j run-shell 'tmuxswitch.sh -D'
# bind -n C-h run-shell 'tmuxswitch.sh -L'
# bind -n C-l run-shell 'tmuxswitch.sh -R'
# bind -n C-\ run-shell 'tmuxswitch.sh -l'


# ne switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l" 


# bind  C-S-h swap-pane -L
# bind  C-S-l swap-pane -R
bind  c-s   swap-pane -U

# use vim motion keys while in copy mode
setw -g mode-keys vi

# use the vim resize keys.
# the number at the end is how much the pane will be resized,
# and 1 is fairly small -- you might want to tweak this.
bind -r < resize-pane -L 1
bind -r > resize-pane -R 1

bind -r c-s-H resize-pane -L 10
bind -r c-s-L resize-pane -R 10
bind -r c-s-K resize-pane -U 10
bind -r c-s-J resize-pane -D 10
bind -r c-h resize-pane -L 1
bind -r c-l resize-pane -R 1
bind -r c-k resize-pane -U 1
bind -r c-j resize-pane -D 1

# unbind +
# unbind -
# bind + new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.1 \; select-window -t tmux-zoom 
# bind - last-window \; swap-pane -s tmux-zoom.1 \; kill-window -t tmux-zoom
# bind C-m run "if [[ $(tmux list-window) =~ ZOOM ]]; then tmux last-window; tmux swap-pane -s ZOOM.1; tmux kill-window -t ZOOM; else tmux new-window -d -n ZOOM; tmux swap-pane -s ZOOM.1; tmux select-window -t ZOOM;fi"

# Reload key
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"
 
# this enables shift PageUp and PageDown but clobbers the colors
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g default-terminal "screen-256color"
set -ga default-terminal ",xterm-256color:Tc"

set -g history-limit 100000

# # THEME
#set-option -g status on
#set-option -g status-interval 2
#set-option -g status-utf8 on
#set-option -g status-justify "centre"
#set-option -g status-left-length 60
#set-option -g status-right-length 90
#set-option -g status-left "#(~/.vim/dotfiles/tmux-powerline/status-left.sh)"
#set-option -g status-right "#(~/.vim/dotfiles/tmux-powerline/status-right.sh)"

#### COLOUR (Solarized 256)

# default statusbar colors
#set-option -g status-bg colour235 #base02
#set-option -g status-fg colour136 #yellow
#set-option -g status-attr default

## default window title colors
#set-window-option -g window-status-fg colour244 #base0
#set-window-option -g window-status-bg default
##set-window-option -g window-status-attr dim

## active window title colors
#set-window-option -g window-status-current-fg colour166 #orange
#set-window-option -g window-status-current-bg default
##set-window-option -g window-status-current-attr bright

## pane border
#set-option -g pane-border-fg colour235 #base02
#set-option -g pane-active-border-fg colour240 #base01

## message text
#set-option -g message-bg colour235 #base02
#set-option -g message-fg colour166 #orange

## pane number display
#set-option -g display-panes-active-colour colour33 #blue
#set-option -g display-panes-colour colour166 #orange

## clock
#set-window-option -g clock-mode-colour colour64 #green

# vim copy selection
bind-key  C-[ copy-mode
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'r' rectangle-toggle


# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

set-option -g default-command "reattach-to-user-namespace -l bash"

# ctrl+left/right cycles through windows
bind-key -n M-right next
bind-key -n M-left prev

# ctrl+shift+left/right moves windows
bind-key -n M-S-right swap-window -t +
bind-key -n M-S-left swap-window -t -

# Ctrl+PageUp/PageDown start scroll mode
bind-key -n C-PPage copy-mode -u
bind-key -n S-PPage copy-mode -u
bind-key -t vi-copy -n S-PPage page-up
bind-key -t vi-copy -n S-NPage page-down
bind-key -t vi-copy -n C-PPage page-up
bind-key -t vi-copy -n C-NPage page-down
bind-key p paste-buffer
bind-key P choose-buffer
bind-key V copy-mode
bind-key k confirm-before kill-pane
# set-window-option -g mode-mouse on
# set-option -g mouse-select-pane off
set-option -g mouse off

# p and n history keys in command modd
bind-key -t emacs-edit C-p  history-up
bind-key -t emacs-edit C-n  history-down
# bind-key -t emacs-edit C-w  delete-word

# No delay for escape key press
set -sg escape-time 0
# bind-key C-w pipe-pane -o 'cat >~/tmux.out.#I.#P'


# setw -g c0-change-interval 50
# setw -g c0-change-trigger  75

# run-shell ~/.tmux/tmux-copycat/copycat.tmux
# run-shell ~/.tmux/tmux-yank/yank.tmux
