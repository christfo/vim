unbind C-b
set -g prefix C-a
bind a send-prefix
set -g base-index 1
setw -g pane-base-index 1

source "/home/chrisf/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"

# screen-like
bind ^C new-window
bind ^D detach-client
# bind ^N next-window
# bind ^P previous-window
#bind ^K confirm-before -p "kill-window #S? (y/n)" kill-window
bind ^O last-window
# rotate 
bind -r ^R rotate-window -D

unbind %
bind | split-window -h
bind _ split-window -v
# use "v" and "s" to do vertical/horizontal splits, like vim
bind s split-window -v
bind v split-window -h

# navigation
bind-key  C-a last-window 
bind-key -r C-n next-window 
bind-key -r C-p previous-window 

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Automatically set window title
setw -g automatic-rename
setw -g aggressive-resize on


# use the vim motion keys to move between panes
# bind  C-h select-pane -L
# bind  C-j select-pane -D
# bind  C-k select-pane -U
# bind  C-l select-pane -R

# bind -n C-k run-shell 'tmuxswitch.sh -U'
# bind -n C-j run-shell 'tmuxswitch.sh -D'
# bind -n C-h run-shell 'tmuxswitch.sh -L'
# bind -n C-l run-shell 'tmuxswitch.sh -R'
# bind -n C-\ run-shell 'tmuxswitch.sh -l'

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# bind  C-S-h swap-pane -L
# bind  C-S-l swap-pane -R
bind  c-s   swap-pane -U

# use vim motion keys while in copy mode
setw -g mode-keys vi
set -g status-keys vi

# use the vim resize keys.
# the number at the end is how much the pane will be resized,
# and 1 is fairly small -- you might want to tweak this.
bind -r < resize-pane -L 1
bind -r > resize-pane -R 1

# unbind +
# unbind -
# bind + new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.1 \; select-window -t tmux-zoom 
# bind - last-window \; swap-pane -s tmux-zoom.1 \; kill-window -t tmux-zoom
# bind C-m run "if [[ $(tmux list-window) =~ ZOOM ]]; then tmux last-window; tmux swap-pane -s ZOOM.1; tmux kill-window -t ZOOM; else tmux new-window -d -n ZOOM; tmux swap-pane -s ZOOM.1; tmux select-window -t ZOOM;fi"

# Reload key
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"
 
# this enables shift PageUp and PageDown but clobbers the colors
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g default-terminal "screen-256color"

set -g history-limit 100000

# # THEME
#set-option -g status on
#set-option -g status-interval 2
#set-option -g status-utf8 on
#set-option -g status-justify "centre"
#set-option -g status-left-length 60
#set-option -g status-right-length 90
#set-option -g status-left "#(~/.vim/dotfiles/tmux-powerline/status-left.sh)"
#set-option -g status-right "#(~/.vim/dotfiles/tmux-powerline/status-right.sh)"

#### COLOUR (Solarized 256)

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green



# vim copy selection
bind-key ESCAPE copy-mode
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'r' rectangle-toggle


# ctrl+left/right cycles through windows
bind-key -n M-right next
bind-key -n M-left prev

# ctrl+shift+left/right moves windows
bind-key -n M-S-right swap-window -t +
bind-key -n M-S-left swap-window -t -

# Ctrl+PageUp/PageDown start scroll mode
bind-key -n C-PPage copy-mode -u
bind-key -n S-PPage copy-mode -u
bind-key -t vi-copy -n S-PPage page-up
bind-key -t vi-copy -n S-NPage page-down
bind-key -t vi-copy -n C-PPage page-up
bind-key -t vi-copy -n C-NPage page-down
bind-key p paste-buffer
bind-key P choose-buffer
bind-key V copy-mode
bind-key k confirm-before kill-pane
# set-window-option -g mode-mouse on
# set-option -g mouse-select-pane off

# p and n history keys in command modd
set -g status-keys emacs
bind-key -t emacs-edit C-p  history-up
bind-key -t emacs-edit C-n  history-down
# bind-key -t emacs-edit C-w  delete-word

# No delay for escape key press
set -sg escape-time 0
bind-key C-w pipe-pane -o 'cat >~/tmux.out.#I.#P'


# setw -g c0-change-interval 50
# setw -g c0-change-trigger  75

run-shell ~/.tmux/tmux-copycat/copycat.tmux
run-shell ~/.tmux/tmux-yank/yank.tmux


