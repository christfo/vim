[MASTER]

# Specify a configuration file.
#rcfile=

# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
#init-hook=

# Profiled execution.
profile=no

# Add files or directories to the blacklist. They should be base names, not
# paths.
ignore=CVS

# Pickle collected data for later comparisons.
persistent=yes

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=


[MESSAGES CONTROL]

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time.
#enable=

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifier separated by comma (,) or put this option
# multiple time (only on the command line, not in the configuration file where
# it should appear only once).
# See http://docs.pylint.org/features.html for meaning.
# FIXME: Enable ASAP: unused-argument,protected-access,logging-not-lazy
disable=no-self-use,too-few-public-methods,too-many-public-methods,
        unused-argument,broad-except,protected-access,logging-not-lazy,
        missing-docstring,empty-docstring,abstract-class-not-used,
        line-too-long,attribute-defined-outside-init,star-args,
        multiple-statements,global-statement,no-init,dangerous-default-value,
        trailing-whitespace,anomalous-backslash-in-string,superfluous-parens,
        bad-whitespace,bad-continuation,abstract-method


[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html
output-format=text

# Put messages in a separate file for each module / package specified on the
# command line instead of printing them on stdout. Reports (if any) will be
# written in a file name "pylint_global.[txt|html]".
files-output=no

# Tells whether to display a full report or only the messages
reports=no

# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (RP0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Add a comment according to your evaluation note. This is used by the global
# evaluation report (RP0004).
comment=no


[TYPECHECK]

# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of classes names for which member attributes should not be checked
# (useful for classes with attributes dynamically set).
#
# socket module: fileno(), shutdown(), etc. appear to be dynamically added.
# ldap and sh also seem to have dynamic properties.
ignored-classes=_socketobject,ldap,netifaces,sh

# When zope mode is activated, add a predefined set of Zope acquired attributes
# to generated-members.
zope=no

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E0201 when accessed. Python regular
# expressions are accepted.
# FIXME: fix _globals so that we don't need these.
generated-members=REQUEST,acl_users,aq_parent,args,cid,client_scripts,workq


[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=


[VARIABLES]

# Tells whether we should check for unused import in __init__ files.
init-import=no

# A regular expression matching the beginning of the name of dummy variables
# (i.e. not used).
dummy-variables-rgx=_|dummy

# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=


[BASIC]

# Required attributes for module, separated by a comma
# required-attributes=

# List of builtins function names that should not be used, separated by a comma
bad-functions=map,filter,apply,input

# Regular expression which should only match correct module names
module-rgx=(([a-z_][a-z0-9_\-]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression which should only match correct module level names
# FIXME - tighten?
const-rgx=[a-zA-Z_][a-zA-Z0-9_]{0,40}$

# Regular expression which should only match correct class names
class-rgx=[a-zA-Z_][a-zA-Z0-9]+$

# Regular expression which should only match correct function names
# FIXME - force function name length > 1 ??
function-rgx=[a-zA-Z_][a-zA-Z0-9_]{0,40}$

# Regular expression which should only match correct method names
# FIXME - force name length > 1 ??
method-rgx=[A-Za-z_][A-Za-z0-9_]{0,50}$

# Regular expression which should only match correct instance attribute names
# FIXME - force name length > 1 ??
attr-rgx=[A-Za-z_][A-Za-z0-9_]{0,40}$

# Regular expression which should only match correct argument names
# FIXME - force name length > 1 ??
argument-rgx=[a-zA-Z_][a-zA-Z0-9_]{0,40}$

# Regular expression which should only match correct variable names
# FIXME - force variable name length > 1 ??
variable-rgx=[a-zA-Z_][a-zA-Z0-9_]{0,40}$

# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,ex,Run,_

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# Regular expression which should only match functions or classes name which do
# not require a docstring
# FIXME - require docstring?
no-docstring-rgx=.*


[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes


[FORMAT]

# Maximum number of characters on a single line.
# FIXME - should be 80
max-line-length=150

# Maximum number of lines in a module
max-module-lines=10000

# String used as indentation unit. This is usually " " (4 spaces) or "\t" (1
# tab).
indent-string='   '


[DESIGN]

# Maximum number of arguments for function / method
max-args=20

# Argument names that match this expression will be ignored. Default to name
# with leading underscore
ignored-argument-names=_.*

# Maximum number of locals for function / method body
# FIXME - reduce?
max-locals=30

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of branch for function / method body
max-branches=15

# Maximum number of statements in function / method body
max-statements=60

# Maximum number of parents for a class (see R0901).
max-parents=12

# Maximum number of attributes for a class (see R0902).
max-attributes=60

# Minimum number of public methods for a class (see R0903).
min-public-methods=2

# Maximum number of public methods for a class (see R0904).
max-public-methods=20


[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report RP0402 must not be disabled)
import-graph=

# Create a graph of external dependencies in the given file (report RP0402 must
# not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report RP0402 must
# not be disabled)
int-import-graph=


[CLASSES]

# List of interface methods to ignore, separated by a comma. This is used for
# instance to not check methods defines in Zope's Interface base class.
# ignore-iface-methods=isImplementedBy,deferred,extends,names,namesAndDescriptions,queryDescriptionFor,getBases,getDescriptionFor,getDoc,getName,getTaggedValue,getTaggedValueTags,isEqualOrExtendedBy,setTaggedValue,isImplementedByInstancesOf,adaptWith,is_implemented_by

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls


[EXCEPTIONS]

# Exceptions that will emit a warning when being caught. Defaults to
# "Exception"
overgeneral-exceptions=Exception
